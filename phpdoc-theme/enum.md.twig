{% import 'include/macros.twig' as macros %}
{% block content %}
***
{% include 'config/header.md.twig' %}

# {{ node.name }}

{{ node.summary|raw }}

{{ node.description|raw }}

* Full name: `{{ node.FullyQualifiedStructuralElementName }}`
{% if node.parent and node.parent is not empty %}* Parent enum: {{ macros.mdClassLink(node.parent, macros.mdClassPath(node), node.parent.FullyQualifiedStructuralElementName) }}
{% endif %}
{% if node.final %}* This enum is marked as **final** and can't be subclassed
{% endif %}
{% if node.deprecated %}* **Warning:** this enum is **deprecated**. This means that this enum will likely be removed in a future version.
{% endif %}
{% if node.interfaces is not empty %}
* This enum implements:
{% for interface in node.interfaces %}
{% if loop.index0 > 0 %}{{ ', ' }}{% endif %}{{ macros.mdClassLink(interface, macros.mdClassPath(node), interface) }}{% endfor %}
{% endif %}

{# Check cases #}
{% set cases = cases(node) %}
{% if cases is not empty %}
## Cases

{% for case in cases %}
{% include 'enum-case.md.twig' %}
{% endfor %}
{% endif %}


{# Check methods #}
{% set methods = methods(node) %}
{% if methods is not empty %}
## Methods

{% for method in methods %}
{% include 'method.md.twig' %}
{% endfor %}
{% endif %}{# if methods #}

{% include 'config/footer.md.twig' %}
{% endblock %}
